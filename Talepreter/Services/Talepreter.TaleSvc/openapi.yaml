openapi: 3.1.0
info:
  title: Talepreter.TaleSvc
  version: '1.0'
paths:
  /api/Tale/ping:
    get:
      tags:
        - Tale
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/api/Tale/{taleId}/{taleVersionId}/status':
    get:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EntityStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/{chapter}/status':
    get:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: chapter
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EntityStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/{chapter}/{page}/status':
    get:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: chapter
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EntityStatus'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/EntityStatus'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/stop':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/purge':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/purge':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/{chapter}/{page}/add':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: chapter
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/execute':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/{chapter}/{page}/process':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: chapter
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeginProcessRequestData'
          text/json:
            schema:
              $ref: '#/components/schemas/BeginProcessRequestData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BeginProcessRequestData'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/initialize':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitializePublishRequestData'
          text/json:
            schema:
              $ref: '#/components/schemas/InitializePublishRequestData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InitializePublishRequestData'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/versions':
    post:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetVersionsResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/GetVersionsResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/GetVersionsResponseData'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Tale/{taleId}/{taleVersionId}/lastexecutedpage':
    get:
      tags:
        - Tale
      parameters:
        - name: taleId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: taleVersionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GetLastExecutedPageResponseData'
            application/json:
              schema:
                $ref: '#/components/schemas/GetLastExecutedPageResponseData'
            text/json:
              schema:
                $ref: '#/components/schemas/GetLastExecutedPageResponseData'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    BeginProcessRequestData:
      type: object
      properties:
        commands:
          type: array
          items:
            $ref: '#/components/schemas/Command'
          nullable: true
        pageInfo:
          $ref: '#/components/schemas/PageBlock'
      additionalProperties: false
    Command:
      type: object
      properties:
        phase:
          type: integer
          format: int32
        index:
          type: integer
          format: int32
        prequisite:
          type: integer
          format: int32
          nullable: true
        hasChild:
          type: boolean
          nullable: true
        tag:
          type: string
          nullable: true
        target:
          type: string
          nullable: true
        parent:
          type: string
          nullable: true
        namedParameters:
          type: array
          items:
            $ref: '#/components/schemas/NamedParameter'
          nullable: true
        arrayParameters:
          type: array
          items:
            type: string
          nullable: true
        comment:
          type: string
          nullable: true
      additionalProperties: false
    EntityStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: integer
      format: int32
    GetLastExecutedPageResponseData:
      type: object
      properties:
        chapter:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
      additionalProperties: false
    GetVersionsResponseData:
      type: object
      properties:
        versions:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    InitializePublishRequestData:
      type: object
      properties:
        backupOfVersionId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    Location:
      type: object
      properties:
        settlement:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
      additionalProperties: false
    NamedParameter:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/NamedParameterType'
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    NamedParameterType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    PageBlock:
      type: object
      properties:
        date:
          type: integer
          format: int64
        stay:
          type: integer
          format: int64
        location:
          $ref: '#/components/schemas/Location'
        travel:
          $ref: '#/components/schemas/Location'
        voyage:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
